{"ast":null,"code":"import _slicedToArray from\"C:/Users/Administrateur/Desktop/Chanllenges/interactive-card/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useId,useState}from'react';// Components\nimport Error from'./Error';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CardNumberInput(_ref){var setCardNumber=_ref.setCardNumber,setCardNumberValid=_ref.setCardNumberValid;var id=useId();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var handleNumberInput=function handleNumberInput(_ref2){var _inputNumber$match;var target=_ref2.target;var inputNumber=target.value.replace(/ /g,'');var formattedNumber=(_inputNumber$match=inputNumber.match(/.{1,4}/g))===null||_inputNumber$match===void 0?void 0:_inputNumber$match.join(' ');var pattern=/^[0-9\\s]+$/;if(!formattedNumber){setMessage('Can\\'t be blank');setError(true);setCardNumberValid(false);}else if(!pattern.test(formattedNumber)){setMessage('Wrong format, numbers only');setError(true);setCardNumberValid(false);}else if(target.value.length<19&&target.value.length>=1||!validateCreditCardNumber(target.value)){setMessage('Card number not valid');setError(true);setCardNumberValid(false);}else{setError(false);setCardNumberValid(true);}setInputValue(formattedNumber||'');setCardNumber(formattedNumber||'0000 0000 0000 0000');};var validateCreditCardNumber=function validateCreditCardNumber(CardNumber){// remove spaces or dashes from the card number\nCardNumber=CardNumber.replace(/[\\s-]/g,'');// validating the credit card number according the Luhn algorithm\nvar sum=0;var doubleUp=false;for(var i=CardNumber.length-1;i>=0;i--){var digit=parseInt(CardNumber.charAt(i));if(doubleUp){if((digit*=2)>9)digit-=9;}sum+=digit;doubleUp=!doubleUp;}return sum%10===0;};return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full flex flex-col gap-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"uppercase tracking-widest text-xs font-semibold\",style:{color:'hsl(278, 68%, 11%)'},htmlFor:id,children:\"Card Number\"}),/*#__PURE__*/_jsx(\"input\",{value:inputValue,onChange:handleNumberInput,className:\"\".concat(error?'border-red-500':'border-slate-200',\" border-[.5px] border-solid focus:border-violet-800 p-2 outline-none rounded-lg \"),type:\"text\",inputMode:\"numeric\",maxLength:\"19\",placeholder:\"e.g. 1234 5678 9123 0000\",id:id,required:true}),error&&/*#__PURE__*/_jsx(Error,{message:message})]});}export default CardNumberInput;","map":{"version":3,"names":["React","useId","useState","Error","jsx","_jsx","jsxs","_jsxs","CardNumberInput","_ref","setCardNumber","setCardNumberValid","id","_useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","error","setError","_useState5","_useState6","message","setMessage","handleNumberInput","_ref2","_inputNumber$match","target","inputNumber","value","replace","formattedNumber","match","join","pattern","test","length","validateCreditCardNumber","CardNumber","sum","doubleUp","i","digit","parseInt","charAt","className","children","style","color","htmlFor","onChange","concat","type","inputMode","maxLength","placeholder","required"],"sources":["C:/Users/Administrateur/Desktop/Chanllenges/interactive-card/src/Components/Form/CardNumberInput.jsx"],"sourcesContent":["import React, { useId, useState } from 'react';\r\n\r\n// Components\r\nimport Error from './Error';\r\n\r\nfunction CardNumberInput({setCardNumber, setCardNumberValid}) {\r\n  const id = useId();\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleNumberInput = ({ target }) => {\r\n    const inputNumber = target.value.replace(/ /g, '');\r\n    const formattedNumber = inputNumber.match(/.{1,4}/g)?.join(' ');\r\n    const pattern = /^[0-9\\s]+$/;\r\n    if(!formattedNumber){\r\n      setMessage('Can\\'t be blank');\r\n      setError(true);\r\n      setCardNumberValid(false);\r\n    }else if(!pattern.test(formattedNumber)){\r\n      setMessage('Wrong format, numbers only');\r\n      setError(true);\r\n      setCardNumberValid(false);\r\n    }else if((target.value.length < 19 && target.value.length >= 1) || !validateCreditCardNumber(target.value)){\r\n      setMessage('Card number not valid');\r\n      setError(true);\r\n      setCardNumberValid(false);\r\n    }else{\r\n      setError(false);\r\n      setCardNumberValid(true);\r\n    }\r\n    setInputValue(formattedNumber || '');\r\n    setCardNumber(formattedNumber || '0000 0000 0000 0000');\r\n  };\r\n\r\n  const validateCreditCardNumber = (CardNumber) => {\r\n    // remove spaces or dashes from the card number\r\n    CardNumber = CardNumber.replace(/[\\s-]/g, '');\r\n\r\n    // validating the credit card number according the Luhn algorithm\r\n    let sum = 0;\r\n    let doubleUp = false;\r\n\r\n    for(var i=CardNumber.length-1; i>=0; i--){\r\n      var digit = parseInt(CardNumber.charAt(i));\r\n      if(doubleUp){\r\n        if((digit *= 2) > 9) digit -= 9;\r\n      }\r\n\r\n      sum += digit;\r\n      doubleUp = !doubleUp;\r\n    }\r\n    return ((sum % 10) === 0);\r\n  }\r\n\r\n  return (\r\n    <div className='w-full flex flex-col gap-2'>\r\n      <label className=\"uppercase tracking-widest text-xs font-semibold\" style={{color: 'hsl(278, 68%, 11%)'}} htmlFor={id}>Card Number</label>\r\n      <input value={inputValue} onChange={handleNumberInput} className={`${error ? 'border-red-500' : 'border-slate-200'} border-[.5px] border-solid focus:border-violet-800 p-2 outline-none rounded-lg `} type=\"text\" inputMode='numeric' maxLength='19' placeholder='e.g. 1234 5678 9123 0000' id={id} required />\r\n      {\r\n        error && (\r\n          <Error message={message} />\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default CardNumberInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}