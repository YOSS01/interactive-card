{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrateur\\\\Desktop\\\\Chanllenges\\\\interactive-card\\\\src\\\\Components\\\\Form\\\\CardNumberInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useId, useState } from 'react';\n\n// Components\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardNumberInput({\n  setCardNumber,\n  setCardNumberValid\n}) {\n  _s();\n  const id = useId();\n  const [inputValue, setInputValue] = useState('');\n  const [error, setError] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleNumberInput = ({\n    target\n  }) => {\n    var _inputNumber$match;\n    const inputNumber = target.value.replace(/ /g, '');\n    const formattedNumber = (_inputNumber$match = inputNumber.match(/.{1,4}/g)) === null || _inputNumber$match === void 0 ? void 0 : _inputNumber$match.join(' ');\n    const pattern = /^[0-9\\s]+$/;\n    if (!formattedNumber) {\n      setMessage('Can\\'t be blank');\n      setError(true);\n      setCardNumberValid(false);\n    } else if (!pattern.test(formattedNumber)) {\n      setMessage('Wrong format, numbers only');\n      setError(true);\n      setCardNumberValid(false);\n    } else if (target.value.length < 19 && target.value.length >= 1) {\n      setMessage('Card number not valid');\n      setError(true);\n      setCardNumberValid(false);\n    } else {\n      setError(false);\n      setCardNumberValid(true);\n    }\n    setInputValue(formattedNumber || '');\n    setCardNumber(formattedNumber || '0000 0000 0000 0000');\n  };\n  const validateCreditCardNumber = CardNumber => {\n    // remove spaces in CardNumber variable\n    CardNumber = CardNumber.replace(/[\\s]/g, '');\n\n    // validating the credit card number according the Luhn algorithm\n    sum = 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex flex-col gap-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"uppercase tracking-widest text-xs font-semibold\",\n      style: {\n        color: 'hsl(278, 68%, 11%)'\n      },\n      htmlFor: id,\n      children: \"Card Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputValue,\n      onChange: handleNumberInput,\n      className: `${error ? 'border-red-500' : 'border-slate-200'} border-[.5px] border-solid focus:border-violet-800 p-2 outline-none rounded-lg `,\n      type: \"text\",\n      inputMode: \"numeric\",\n      maxLength: \"19\",\n      placeholder: \"e.g. 1234 5678 9123 0000\",\n      id: id,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(CardNumberInput, \"niW9ywrGKASqG8dq/Lq+x6qWzZI=\", false, function () {\n  return [useId];\n});\n_c = CardNumberInput;\nexport default CardNumberInput;\nvar _c;\n$RefreshReg$(_c, \"CardNumberInput\");","map":{"version":3,"names":["React","useId","useState","Error","jsxDEV","_jsxDEV","CardNumberInput","setCardNumber","setCardNumberValid","_s","id","inputValue","setInputValue","error","setError","message","setMessage","handleNumberInput","target","_inputNumber$match","inputNumber","value","replace","formattedNumber","match","join","pattern","test","length","validateCreditCardNumber","CardNumber","sum","className","children","style","color","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","inputMode","maxLength","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrateur/Desktop/Chanllenges/interactive-card/src/Components/Form/CardNumberInput.jsx"],"sourcesContent":["import React, { useId, useState } from 'react';\r\n\r\n// Components\r\nimport Error from './Error';\r\n\r\nfunction CardNumberInput({setCardNumber, setCardNumberValid}) {\r\n  const id = useId();\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleNumberInput = ({ target }) => {\r\n    const inputNumber = target.value.replace(/ /g, '');\r\n    const formattedNumber = inputNumber.match(/.{1,4}/g)?.join(' ');\r\n    const pattern = /^[0-9\\s]+$/;\r\n    if(!formattedNumber){\r\n      setMessage('Can\\'t be blank');\r\n      setError(true);\r\n      setCardNumberValid(false);\r\n    }else if(!pattern.test(formattedNumber)){\r\n      setMessage('Wrong format, numbers only');\r\n      setError(true);\r\n      setCardNumberValid(false);\r\n    }else if(target.value.length < 19 && target.value.length >= 1){\r\n      setMessage('Card number not valid');\r\n      setError(true);\r\n      setCardNumberValid(false);\r\n    }else{\r\n      setError(false);\r\n      setCardNumberValid(true);\r\n    }\r\n    setInputValue(formattedNumber || '');\r\n    setCardNumber(formattedNumber || '0000 0000 0000 0000');\r\n  };\r\n\r\n  const validateCreditCardNumber = (CardNumber) => {\r\n    // remove spaces in CardNumber variable\r\n    CardNumber = CardNumber.replace(/[\\s]/g, '');\r\n\r\n    // validating the credit card number according the Luhn algorithm\r\n    sum = 0;\r\n  }\r\n\r\n  return (\r\n    <div className='w-full flex flex-col gap-2'>\r\n      <label className=\"uppercase tracking-widest text-xs font-semibold\" style={{color: 'hsl(278, 68%, 11%)'}} htmlFor={id}>Card Number</label>\r\n      <input value={inputValue} onChange={handleNumberInput} className={`${error ? 'border-red-500' : 'border-slate-200'} border-[.5px] border-solid focus:border-violet-800 p-2 outline-none rounded-lg `} type=\"text\" inputMode='numeric' maxLength='19' placeholder='e.g. 1234 5678 9123 0000' id={id} required />\r\n      {\r\n        error && (\r\n          <Error message={message} />\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default CardNumberInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}