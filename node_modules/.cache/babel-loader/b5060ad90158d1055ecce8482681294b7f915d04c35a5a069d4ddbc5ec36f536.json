{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrateur\\\\Desktop\\\\Chanllenges\\\\interactive-card\\\\src\\\\Components\\\\Form\\\\CardNameInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useId } from 'react';\n\n// Component\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlaceHolderName({\n  setCardName,\n  setCardNameValid\n}) {\n  _s();\n  const [error, setError] = useState(false);\n  const [message, setMessage] = useState('');\n  const id = useId();\n  const handleNameInput = ({\n    target\n  }) => {\n    if (!target.value) {\n      setMessage('Can\\'t be blank');\n      setError(true);\n      setCardNameValid(false);\n    } else {\n      setError(false);\n      setCardNameValid(true);\n    }\n    setCardName(target.value ? target.value : 'JANE APPLESSED');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex flex-col gap-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"uppercase tracking-widest text-xs font-semibold\",\n      style: {\n        color: 'hsl(278, 68%, 11%)'\n      },\n      htmlFor: id,\n      children: \"Card Holder Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleNameInput,\n      className: `${error ? 'border-red-500' : 'border-slate-200'} border-[.5px] border-solid focus:border-violet-800 p-2 outline-none rounded-lg `,\n      type: \"text\",\n      placeholder: \"e.g. Jane Applessed\",\n      id: id,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(PlaceHolderName, \"5Fu4LiVnvYtSqm5zfWIDHxuWvkY=\", false, function () {\n  return [useId];\n});\n_c = PlaceHolderName;\nexport default PlaceHolderName;\nvar _c;\n$RefreshReg$(_c, \"PlaceHolderName\");","map":{"version":3,"names":["React","useState","useId","Error","jsxDEV","_jsxDEV","PlaceHolderName","setCardName","setCardNameValid","_s","error","setError","message","setMessage","id","handleNameInput","target","value","className","children","style","color","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrateur/Desktop/Chanllenges/interactive-card/src/Components/Form/CardNameInput.jsx"],"sourcesContent":["import React, { useState, useId } from 'react';\r\n\r\n// Component\r\nimport Error from './Error';\r\n\r\nfunction PlaceHolderName({setCardName, setCardNameValid}) {\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const id = useId();\r\n\r\n  const handleNameInput = ({target}) => {\r\n    if(!target.value){\r\n      setMessage('Can\\'t be blank')\r\n      setError(true);\r\n      setCardNameValid(false);\r\n    }else {\r\n      setError(false);\r\n      setCardNameValid(true);\r\n    }\r\n    setCardName(target.value? target.value : 'JANE APPLESSED');\r\n  }\r\n\r\n  return (\r\n    <div className='w-full flex flex-col gap-2'>\r\n      <label className=\"uppercase tracking-widest text-xs font-semibold\" style={{color: 'hsl(278, 68%, 11%)'}} htmlFor={id}>Card Holder Name</label>\r\n      <input onChange={handleNameInput} className={`${error ? 'border-red-500' : 'border-slate-200'} border-[.5px] border-solid focus:border-violet-800 p-2 outline-none rounded-lg `} type=\"text\" placeholder='e.g. Jane Applessed' id={id} required/>\r\n      {\r\n        error && (\r\n          <Error message={message} />\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default PlaceHolderName;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,KAAK,QAAQ,OAAO;;AAE9C;AACA,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,eAAeA,CAAC;EAACC,WAAW;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,EAAE,GAAGZ,KAAK,CAAC,CAAC;EAElB,MAAMa,eAAe,GAAGA,CAAC;IAACC;EAAM,CAAC,KAAK;IACpC,IAAG,CAACA,MAAM,CAACC,KAAK,EAAC;MACfJ,UAAU,CAAC,iBAAiB,CAAC;MAC7BF,QAAQ,CAAC,IAAI,CAAC;MACdH,gBAAgB,CAAC,KAAK,CAAC;IACzB,CAAC,MAAK;MACJG,QAAQ,CAAC,KAAK,CAAC;MACfH,gBAAgB,CAAC,IAAI,CAAC;IACxB;IACAD,WAAW,CAACS,MAAM,CAACC,KAAK,GAAED,MAAM,CAACC,KAAK,GAAG,gBAAgB,CAAC;EAC5D,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzCd,OAAA;MAAOa,SAAS,EAAC,iDAAiD;MAACE,KAAK,EAAE;QAACC,KAAK,EAAE;MAAoB,CAAE;MAACC,OAAO,EAAER,EAAG;MAAAK,QAAA,EAAC;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9IrB,OAAA;MAAOsB,QAAQ,EAAEZ,eAAgB;MAACG,SAAS,EAAG,GAAER,KAAK,GAAG,gBAAgB,GAAG,kBAAmB,kFAAkF;MAACkB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,qBAAqB;MAACf,EAAE,EAAEA,EAAG;MAACgB,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAE/OhB,KAAK,iBACHL,OAAA,CAACF,KAAK;MAACS,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEV;AAACjB,EAAA,CA7BQH,eAAe;EAAA,QAIXJ,KAAK;AAAA;AAAA6B,EAAA,GAJTzB,eAAe;AA8BxB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}